package neu.edu.info6250.entity;
// Generated 2017-12-7 22:48:41 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "info6250final", uniqueConstraints = @UniqueConstraint(columnNames = "cate_name"))
public class Category implements java.io.Serializable {

	private Integer cateId;
	private String cateName;
	private String cateDesc;
	private String cateStatus;
	private Set<Idea> ideas = new HashSet<Idea>(0);
	private Set<Startup> startups = new HashSet<Startup>(0);

	public Category() {
	}

	public Category(String cateStatus) {
		this.cateStatus = cateStatus;
	}

	public Category(String cateName, String cateDesc, String cateStatus, Set<Idea> ideas, Set<Startup> startups) {
		this.cateName = cateName;
		this.cateDesc = cateDesc;
		this.cateStatus = cateStatus;
		this.ideas = ideas;
		this.startups = startups;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "cate_id", unique = true, nullable = false)
	public Integer getCateId() {
		return this.cateId;
	}

	public void setCateId(Integer cateId) {
		this.cateId = cateId;
	}

	@Column(name = "cate_name", unique = true, length = 20)
	public String getCateName() {
		return this.cateName;
	}

	public void setCateName(String cateName) {
		this.cateName = cateName;
	}

	@Column(name = "cate_desc", length = 100)
	public String getCateDesc() {
		return this.cateDesc;
	}

	public void setCateDesc(String cateDesc) {
		this.cateDesc = cateDesc;
	}

	@Column(name = "cate_status", nullable = false, length = 45)
	public String getCateStatus() {
		return this.cateStatus;
	}

	public void setCateStatus(String cateStatus) {
		this.cateStatus = cateStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Idea> getIdeas() {
		return this.ideas;
	}

	public void setIdeas(Set<Idea> ideas) {
		this.ideas = ideas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Startup> getStartups() {
		return this.startups;
	}

	public void setStartups(Set<Startup> startups) {
		this.startups = startups;
	}

}
